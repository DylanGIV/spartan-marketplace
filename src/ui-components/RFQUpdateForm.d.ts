/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, TextFieldProps } from "@aws-amplify/ui-react";
import { EscapeHatchProps } from "@aws-amplify/ui-react/internal";
import { RFQ } from "../models";
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type RFQUpdateFormInputValues = {
    quotationNumber?: string;
    dateSent?: string;
    custRefNum?: string;
    companyName?: string;
    contact?: string;
    phone?: string;
    email?: string;
    shippingTerms?: string;
    shippingMethod?: string;
    leadTime?: number;
    paymentTerms?: string;
    dueDate?: string;
    quantityRequested?: number;
    quantityQuoted?: number;
    uom?: string;
    price?: number;
    discount?: number;
    attr1?: string;
    attr2?: string;
    attr3?: string;
    lineTotal?: number;
    subtotal?: number;
    salesTax?: number;
    total?: number;
    internalComments?: string;
    emailComments?: string;
    attr4?: string;
    attr5?: string;
    attr6?: string;
    imageUrls?: string[];
    addressLine1?: string;
    addressLine2?: string;
    city?: string;
    state?: string;
    zip?: string;
    country?: string;
    receivingCompanyID?: string;
    userDetailsID?: string;
    sendingCompanyID?: string;
};
export declare type RFQUpdateFormValidationValues = {
    quotationNumber?: ValidationFunction<string>;
    dateSent?: ValidationFunction<string>;
    custRefNum?: ValidationFunction<string>;
    companyName?: ValidationFunction<string>;
    contact?: ValidationFunction<string>;
    phone?: ValidationFunction<string>;
    email?: ValidationFunction<string>;
    shippingTerms?: ValidationFunction<string>;
    shippingMethod?: ValidationFunction<string>;
    leadTime?: ValidationFunction<number>;
    paymentTerms?: ValidationFunction<string>;
    dueDate?: ValidationFunction<string>;
    quantityRequested?: ValidationFunction<number>;
    quantityQuoted?: ValidationFunction<number>;
    uom?: ValidationFunction<string>;
    price?: ValidationFunction<number>;
    discount?: ValidationFunction<number>;
    attr1?: ValidationFunction<string>;
    attr2?: ValidationFunction<string>;
    attr3?: ValidationFunction<string>;
    lineTotal?: ValidationFunction<number>;
    subtotal?: ValidationFunction<number>;
    salesTax?: ValidationFunction<number>;
    total?: ValidationFunction<number>;
    internalComments?: ValidationFunction<string>;
    emailComments?: ValidationFunction<string>;
    attr4?: ValidationFunction<string>;
    attr5?: ValidationFunction<string>;
    attr6?: ValidationFunction<string>;
    imageUrls?: ValidationFunction<string>;
    addressLine1?: ValidationFunction<string>;
    addressLine2?: ValidationFunction<string>;
    city?: ValidationFunction<string>;
    state?: ValidationFunction<string>;
    zip?: ValidationFunction<string>;
    country?: ValidationFunction<string>;
    receivingCompanyID?: ValidationFunction<string>;
    userDetailsID?: ValidationFunction<string>;
    sendingCompanyID?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type RFQUpdateFormOverridesProps = {
    RFQUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    quotationNumber?: PrimitiveOverrideProps<TextFieldProps>;
    dateSent?: PrimitiveOverrideProps<TextFieldProps>;
    custRefNum?: PrimitiveOverrideProps<TextFieldProps>;
    companyName?: PrimitiveOverrideProps<TextFieldProps>;
    contact?: PrimitiveOverrideProps<TextFieldProps>;
    phone?: PrimitiveOverrideProps<TextFieldProps>;
    email?: PrimitiveOverrideProps<TextFieldProps>;
    shippingTerms?: PrimitiveOverrideProps<TextFieldProps>;
    shippingMethod?: PrimitiveOverrideProps<TextFieldProps>;
    leadTime?: PrimitiveOverrideProps<TextFieldProps>;
    paymentTerms?: PrimitiveOverrideProps<TextFieldProps>;
    dueDate?: PrimitiveOverrideProps<TextFieldProps>;
    quantityRequested?: PrimitiveOverrideProps<TextFieldProps>;
    quantityQuoted?: PrimitiveOverrideProps<TextFieldProps>;
    uom?: PrimitiveOverrideProps<TextFieldProps>;
    price?: PrimitiveOverrideProps<TextFieldProps>;
    discount?: PrimitiveOverrideProps<TextFieldProps>;
    attr1?: PrimitiveOverrideProps<TextFieldProps>;
    attr2?: PrimitiveOverrideProps<TextFieldProps>;
    attr3?: PrimitiveOverrideProps<TextFieldProps>;
    lineTotal?: PrimitiveOverrideProps<TextFieldProps>;
    subtotal?: PrimitiveOverrideProps<TextFieldProps>;
    salesTax?: PrimitiveOverrideProps<TextFieldProps>;
    total?: PrimitiveOverrideProps<TextFieldProps>;
    internalComments?: PrimitiveOverrideProps<TextFieldProps>;
    emailComments?: PrimitiveOverrideProps<TextFieldProps>;
    attr4?: PrimitiveOverrideProps<TextFieldProps>;
    attr5?: PrimitiveOverrideProps<TextFieldProps>;
    attr6?: PrimitiveOverrideProps<TextFieldProps>;
    imageUrls?: PrimitiveOverrideProps<TextFieldProps>;
    addressLine1?: PrimitiveOverrideProps<TextFieldProps>;
    addressLine2?: PrimitiveOverrideProps<TextFieldProps>;
    city?: PrimitiveOverrideProps<TextFieldProps>;
    state?: PrimitiveOverrideProps<TextFieldProps>;
    zip?: PrimitiveOverrideProps<TextFieldProps>;
    country?: PrimitiveOverrideProps<TextFieldProps>;
    receivingCompanyID?: PrimitiveOverrideProps<TextFieldProps>;
    userDetailsID?: PrimitiveOverrideProps<TextFieldProps>;
    sendingCompanyID?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type RFQUpdateFormProps = React.PropsWithChildren<{
    overrides?: RFQUpdateFormOverridesProps | undefined | null;
} & {
    id?: string;
    rFQ?: RFQ;
    onSubmit?: (fields: RFQUpdateFormInputValues) => RFQUpdateFormInputValues;
    onSuccess?: (fields: RFQUpdateFormInputValues) => void;
    onError?: (fields: RFQUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: RFQUpdateFormInputValues) => RFQUpdateFormInputValues;
    onValidate?: RFQUpdateFormValidationValues;
} & React.CSSProperties>;
export default function RFQUpdateForm(props: RFQUpdateFormProps): React.ReactElement;
